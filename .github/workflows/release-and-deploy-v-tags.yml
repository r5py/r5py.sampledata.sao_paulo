# vim: set tabstop=2 softtabstop=2 shiftwidth=2 expandtab:

name: Create a release and deploy to PyPi whenever a protected tag (v0.0.0) is created

on:
  push:
    tags:
      - v*.*.*
      - v*.*.*.dev*
      - v*.*.*.post*

jobs:
  lint:
    name: Linting code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
      - name: Install black and flake8
        run: python -m pip install black flake8
      - name: Lint using black
        run: python -m black --check .
      - name: Lint using flake8
        run: python -m flake8 .

  test:
    name: Run tests
    needs: lint
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python_version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: "pip"

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - run: pip install .[tests]

      - run: python -m pytest

  build:
    name: Build wheel(s) and packages
    needs: test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python_version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: "pip"
      - run: python -m pip install build
      - run: python -m build .
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/*.*
          overwrite: true

  deploy:
    name: Upload built package to PyPi
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: pypi
      url: https://pypi.org/p/r5py.sampledata.helsinki
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/
      - name: Upload package to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  release:
    name: Create a new release
    runs-on: ubuntu-latest
    needs: [deploy]
    if: "!contains(github.ref, 'dev')"
    permissions:
      contents: write
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/
      - name: Create release and upload package
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*

  prerelease:
    name: Create a new pre-release
    runs-on: ubuntu-latest
    needs: [deploy]
    if: contains(github.ref, 'dev')
    permissions:
      contents: write
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/
      - name: Create release and upload package
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          prerelease: true
